Prerequesites
-------------

This code has been developed and tested on an i386 workstation running Linux (2.6.16.60) and g++ (3.4.4 and 4.2.4)

This code depends on ROSE 0.9.4a, which is available for free download from

	http://rosecompiler.org/

ROSE 0.9.4a also depends on the BOOST C++ library, version 1.3.7, which is available for free download from:

	http://www.boost.org/

First make sure that the ROSE environment variable points to the build directory of ROSE:

	export ROSE=/usr/local/rose/compileTree


The build process depends on libtool. It works with GNU libtool version 1.5.22.
The process also works with G++ 3.4.4 or 4.2.4.


Building Diagnose
-----------------

To build the ROSE 'diagnose' program, which runs secure coding rules:

	make pgms

To test diagnose on the code samples from the CERT C Secure Coding Rules:

	make tests

To build API documentation pages, you must have doxygen installed:

	make doc

To clean documentation pages and build files:

	make clean


Running Diagnose
----------------

To run the diagnose program on a C or C++ source file, simply pass the file as an argument:

	diagnose hello.c

If the file takes special arguments to compile properly, such as an include path, simply pass to diagnose the same arguments you would pass to GCC or G++.

If the C file violates some secure coding rules, the diagnose program will print them out. If the diagnose program can not find any violations, it prints nothing.


Secure Coding Rules Enforced by Diagnose
----------------------------------------

The C and C++ Secure Coding Rules are available at:

	https://www.securecoding.cert.org

